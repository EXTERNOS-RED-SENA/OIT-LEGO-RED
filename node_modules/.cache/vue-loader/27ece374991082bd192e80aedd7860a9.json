{"remainingRequest":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/src/views/Tema4.vue?vue&type=template&id=b61d935e&lang=pug","dependencies":[{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/src/views/Tema4.vue","mtime":1734047474080},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}