{"remainingRequest":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/src/views/Glosario.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/src/views/Glosario.vue","mtime":1734047474080},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBwbGFudGlsbGFNaXhpbnMgZnJvbSAnQC9qcy9wbGFudGlsbGFNaXhpbnMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR2xvc2FyaW8nLAogIG1peGluczogW3BsYW50aWxsYU1peGluc10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdsb3NhcmlvRGF0YTogWwogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdBQ0lEJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnQWNyw7NuaW1vIGRlIEF0b21pY2lkYWQsIENvbnNpc3RlbmNpYSwgQWlzbGFtaWVudG8geSBEdXJhYmlsaWRhZDsgcHJvcGllZGFkZXMgcXVlIGdhcmFudGl6YW4gcXVlIGxhcyB0cmFuc2FjY2lvbmVzIGVuIHVuYSBiYXNlIGRlIGRhdG9zIHNlYW4gZmlhYmxlcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0FsZ29yaXRtbycsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0Nvbmp1bnRvIG9yZGVuYWRvIHkgZmluaXRvIGRlIG9wZXJhY2lvbmVzIHNpc3RlbcOhdGljYXMgcXVlIHBlcm1pdGUgaGFjZXIgdW4gY8OhbGN1bG8geSBoYWxsYXIgbGEgc29sdWNpw7NuIGRlIHVuIHByb2JsZW1hIGVzcGVjw61maWNvLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnQmFzZSBkZSBkYXRvcycsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1Npc3RlbWEgb3JnYW5pemFkbyBwYXJhIHJlY29waWxhciwgYWxtYWNlbmFyIHkgZ2VzdGlvbmFyIGRhdG9zIGRlIG1hbmVyYSBlc3RydWN0dXJhZGEgeSBlZmljaWVudGUuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdDUlVEJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnPGk+QWNyw7NuaW1vIGRlIENyZWF0ZSwgUmVhZCwgVXBkYXRlLCBEZWxldGU7PC9pPiBvcGVyYWNpb25lcyBiw6FzaWNhcyBxdWUgc2UgcHVlZGVuIHJlYWxpemFyIHNvYnJlIGRhdG9zIGFsbWFjZW5hZG9zLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnPGk+RGF0YXNldDwvaT4nLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdDb25qdW50byBkZSBkYXRvcyBvcmdhbml6YWRvcyB5IGZvcm1hdGVhZG9zIGRlIG1hbmVyYSBlc3BlY8OtZmljYSBwYXJhIHN1IHVzbyBlbiBhbsOhbGlzaXMgbyBlbnRyZW5hbWllbnRvIGRlIG1vZGVsb3MuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdEYXRvcyBlc3RydWN0dXJhZG9zJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnSW5mb3JtYWNpw7NuIHF1ZSBlc3TDoSBvcmdhbml6YWRhIGVuIHVuIGZvcm1hdG8gcHJlZGVmaW5pZG8geSBmw6FjaWxtZW50ZSBwcm9jZXNhYmxlIHBvciBtw6FxdWluYXMsIHTDrXBpY2FtZW50ZSBlbiB0YWJsYXMgY29uIGZpbGFzIHkgY29sdW1uYXMuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdFVEwnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICc8aT5FeHRyYWN0LCBUcmFuc2Zvcm0sIExvYWQgPC9pPihFeHRyYWVyLCBUcmFuc2Zvcm1hciwgQ2FyZ2FyKTsgcHJvY2VzbyBxdWUgcGVybWl0ZSBhIGxhcyBvcmdhbml6YWNpb25lcyBtb3ZlciBkYXRvcyBkZXNkZSBtw7psdGlwbGVzIGZ1ZW50ZXMsIHJlZm9ybWF0ZWFybG9zIHkgbGltcGlhcmxvcywgeSBjYXJnYXJsb3MgZW4gb3RyYSBiYXNlIGRlIGRhdG9zLicsCiAgICAgICAgfSwKICAgICAgXSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBvcmRlcmVkRGF0YSgpIHsKICAgICAgY29uc3QgbmV3R2xvc2FyaW9EYXRhID0gWy4uLnRoaXMuZ2xvc2FyaW9EYXRhXQogICAgICBuZXdHbG9zYXJpb0RhdGEuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICBlbGVtZW50LnNpZ25pZmljYWRvID0KICAgICAgICAgIGVsZW1lbnQuc2lnbmlmaWNhZG8uY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKwogICAgICAgICAgZWxlbWVudC5zaWduaWZpY2Fkby5zbGljZSgxKQogICAgICB9KQoKICAgICAgY29uc3Qgc29ydGVkRGF0YSA9IFsuLi5uZXdHbG9zYXJpb0RhdGFdLnJlZHVjZSgociwgZSkgPT4gewogICAgICAgIGNvbnN0IGxldHJhID0gdGhpcy5xdWl0YXJBY2VudG9zKGUudGVybWluby50b0xvd2VyQ2FzZSgpKVswXQogICAgICAgIGlmICghcltsZXRyYV0pIHJbbGV0cmFdID0geyBsZXRyYSwgdGVybWlub3M6IFtlXSB9CiAgICAgICAgZWxzZSByW2xldHJhXS50ZXJtaW5vcy5wdXNoKGUpCiAgICAgICAgcmV0dXJuIHIKICAgICAgfSwge30pCgogICAgICBjb25zdCBzb2xvTGV0cmFzID0gT2JqZWN0LmtleXMoc29ydGVkRGF0YSkuc29ydCgpCiAgICAgIGNvbnN0IG5ld1NvcnRlZERhdGEgPSBbXQoKICAgICAgc29sb0xldHJhcy5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgIGNvbnN0IGxldHJhT2JqID0gc29ydGVkRGF0YVtlbGVtZW50XQogICAgICAgIGxldCB0ZXJtaW5vcyA9IGxldHJhT2JqLnRlcm1pbm9zCgogICAgICAgIGlmICh0ZXJtaW5vcy5sZW5ndGggPiAxKSB7CiAgICAgICAgICBjb25zdCB0ZXJtaW5vc09yZGVuYWRvcyA9IFtdCiAgICAgICAgICBjb25zdCBzb2xvVGVybWlub3MgPSBsZXRyYU9iai50ZXJtaW5vcwogICAgICAgICAgICAubWFwKHRlcm1PYmogPT4gdGVybU9iai50ZXJtaW5vKQogICAgICAgICAgICAuc29ydCgoYSwgYikgPT4gewogICAgICAgICAgICAgIGNvbnN0IGFuID0gdGhpcy5xdWl0YXJBY2VudG9zKGEpLnRvTG93ZXJDYXNlKCkKICAgICAgICAgICAgICBjb25zdCBibiA9IHRoaXMucXVpdGFyQWNlbnRvcyhiKS50b0xvd2VyQ2FzZSgpCiAgICAgICAgICAgICAgaWYgKGFuIDwgYm4pIHJldHVybiAtMQogICAgICAgICAgICAgIGlmIChibiA8IGFuKSByZXR1cm4gMQogICAgICAgICAgICAgIHJldHVybiAwCiAgICAgICAgICAgIH0pCiAgICAgICAgICBzb2xvVGVybWlub3MuZm9yRWFjaCh0ZXJtID0+IHsKICAgICAgICAgICAgdGVybWlub3NPcmRlbmFkb3MucHVzaCgKICAgICAgICAgICAgICB0ZXJtaW5vcy5maW5kKHRlcm1pbm8gPT4gdGVybWluby50ZXJtaW5vID09PSB0ZXJtKSwKICAgICAgICAgICAgKQogICAgICAgICAgfSkKICAgICAgICAgIHRlcm1pbm9zID0gdGVybWlub3NPcmRlbmFkb3MKICAgICAgICB9CiAgICAgICAgbmV3U29ydGVkRGF0YS5wdXNoKHsKICAgICAgICAgIGxldHJhOiBsZXRyYU9iai5sZXRyYS50b1VwcGVyQ2FzZSgpLAogICAgICAgICAgdGVybWlub3M6IHRlcm1pbm9zLAogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIHJldHVybiBuZXdTb3J0ZWREYXRhCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["Glosario.vue"],"names":[],"mappings":";AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Glosario.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n.curso-main-container.glosario\n  BannerInterno(icono=\"fas fa-atlas\" titulo=\"Glosario\")\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .glosario__letra-item.mb-2(v-for=\"letra in orderedData\" :key=\"'letra-'+letra.letra\")\n      .glosario__letra-item__letra.me-4\n        .glosario__letra-item__letra__icono\n          span {{letra.letra}}\n      .glosario__letra-item__texto\n        p.mb-3(v-for=\"termino in letra.terminos\")\n          strong\n            i.lista-ul__vineta\n          strong(v-html=\"termino.terminoHtml || termino.termino\") \n          strong : \n          span(v-html=\"termino.significado\")\n</template>\n\n<script>\nimport plantillaMixins from '@/js/plantillaMixins'\nexport default {\n  name: 'Glosario',\n  mixins: [plantillaMixins],\n  data() {\n    return {\n      glosarioData: [\n        {\n          termino: 'ACID',\n          significado:\n            'Acrónimo de Atomicidad, Consistencia, Aislamiento y Durabilidad; propiedades que garantizan que las transacciones en una base de datos sean fiables.',\n        },\n        {\n          termino: 'Algoritmo',\n          significado:\n            'Conjunto ordenado y finito de operaciones sistemáticas que permite hacer un cálculo y hallar la solución de un problema específico.',\n        },\n        {\n          termino: 'Base de datos',\n          significado:\n            'Sistema organizado para recopilar, almacenar y gestionar datos de manera estructurada y eficiente.',\n        },\n        {\n          termino: 'CRUD',\n          significado:\n            '<i>Acrónimo de Create, Read, Update, Delete;</i> operaciones básicas que se pueden realizar sobre datos almacenados.',\n        },\n        {\n          termino: '<i>Dataset</i>',\n          significado:\n            'Conjunto de datos organizados y formateados de manera específica para su uso en análisis o entrenamiento de modelos.',\n        },\n        {\n          termino: 'Datos estructurados',\n          significado:\n            'Información que está organizada en un formato predefinido y fácilmente procesable por máquinas, típicamente en tablas con filas y columnas.',\n        },\n        {\n          termino: 'ETL',\n          significado:\n            '<i>Extract, Transform, Load </i>(Extraer, Transformar, Cargar); proceso que permite a las organizaciones mover datos desde múltiples fuentes, reformatearlos y limpiarlos, y cargarlos en otra base de datos.',\n        },\n      ],\n    }\n  },\n  computed: {\n    orderedData() {\n      const newGlosarioData = [...this.glosarioData]\n      newGlosarioData.forEach(element => {\n        element.significado =\n          element.significado.charAt(0).toLowerCase() +\n          element.significado.slice(1)\n      })\n\n      const sortedData = [...newGlosarioData].reduce((r, e) => {\n        const letra = this.quitarAcentos(e.termino.toLowerCase())[0]\n        if (!r[letra]) r[letra] = { letra, terminos: [e] }\n        else r[letra].terminos.push(e)\n        return r\n      }, {})\n\n      const soloLetras = Object.keys(sortedData).sort()\n      const newSortedData = []\n\n      soloLetras.forEach(element => {\n        const letraObj = sortedData[element]\n        let terminos = letraObj.terminos\n\n        if (terminos.length > 1) {\n          const terminosOrdenados = []\n          const soloTerminos = letraObj.terminos\n            .map(termObj => termObj.termino)\n            .sort((a, b) => {\n              const an = this.quitarAcentos(a).toLowerCase()\n              const bn = this.quitarAcentos(b).toLowerCase()\n              if (an < bn) return -1\n              if (bn < an) return 1\n              return 0\n            })\n          soloTerminos.forEach(term => {\n            terminosOrdenados.push(\n              terminos.find(termino => termino.termino === term),\n            )\n          })\n          terminos = terminosOrdenados\n        }\n        newSortedData.push({\n          letra: letraObj.letra.toUpperCase(),\n          terminos: terminos,\n        })\n      })\n      return newSortedData\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.glosario\n  &__letra-item\n    display: flex\n    &__texto\n      padding-top: 5px\n    &__letra\n      &__icono\n        width: 32px\n        height: 32px\n        position: relative\n        line-height: 1em\n        border-radius: 50%\n        background-color: $color-sistema-d\n\n        span\n          position: absolute\n          left: 50%\n          top: 50%\n          transform: translate(-50%,-50%)\n          font-size: 1.1em\n          font-weight: $base-black-font-weight\n</style>\n"]}]}