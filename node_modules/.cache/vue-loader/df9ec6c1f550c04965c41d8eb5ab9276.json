{"remainingRequest":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/src/views/Tema3.vue?vue&type=template&id=05778c86&lang=pug","dependencies":[{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/src/views/Tema3.vue","mtime":1734047474080},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/OIT-LEGO-RED/OIT-LEGO-RED/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubwogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNS5tYi01CiAgICAudGl0dWxvLXByaW5jaXBhbC5jb2xvci1hY2VudG8tY29udGVuaWRvCiAgICAgIC50aXR1bG8tcHJpbmNpcGFsX19udW1lcm8KICAgICAgICBzcGFuIDMKICAgICAgaDEgR2VzdGnDs24gZGUgYmFzZXMgZGUgZGF0b3MKCiAgICAuYmxvcXVlLXRleHRvLWcuYmxvcXVlLXRleHRvLWctLWludmVyc28uY29sb3ItYWNlbnRvLWNvbnRlbmlkby5wLTMucC1zbS00LnAtbWQtNQogICAgICAuYmxvcXVlLXRleHRvLWdfX2ltZygKICAgICAgICA6c3R5bGU9InsnYmFja2dyb3VuZC1pbWFnZSc6IGB1cmwoJHtyZXF1aXJlKCdAL2Fzc2V0cy9jdXJzby90ZW1hcy80OC5wbmcnKX0pYH0iCiAgICAgICkKICAgICAgLmJsb3F1ZS10ZXh0by1nX190ZXh0by5wLTQKICAgICAgICBwLm1iLTAgTGEgZ2VzdGnDs24gZWZlY3RpdmEgZGUgYmFzZXMgZGUgZGF0b3MgcmVwcmVzZW50YSB1biBjb21wb25lbnRlIGNlbnRyYWwgZW4gbGEgaW5mcmFlc3RydWN0dXJhIGRlIGN1YWxxdWllciBzaXN0ZW1hIGRlIGluZm9ybWFjacOzbiBtb2Rlcm5vLiBFbiBlc3RlIGNhcMOtdHVsbywgc2UgZXhwbG9yYXLDoW4gbG9zIGRpZmVyZW50ZXMgdGlwb3MgZGUgYmFzZXMgZGUgZGF0b3MsIHN1cyBjYXJhY3RlcsOtc3RpY2FzIGRpc3RpbnRpdmFzIHkgbGFzIG1lam9yZXMgcHLDoWN0aWNhcyBwYXJhIHN1IGFkbWluaXN0cmFjacOzbiB5IG9wdGltaXphY2nDs24uIAoKICAgIFNlcGFyYWRvciAKICAgICN0XzNfMS50aXR1bG8tc2VndW5kby5jb2xvci1hY2VudG8tY29udGVuaWRvCiAgICAgIGgyIDMuMSBCYXNlcyBkZSBkYXRvcyByZWxhY2lvbmFsZXMgeSBubyByZWxhY2lvbmFsZXMKCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIubWItNQogICAgICAuY29sLWxnLTUubXktbGctMC5teS0zCiAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvNTkucG5nJywgYWx0PScnKSAgICAgICAKICAgICAgLmNvbC1sZy03Lm15LWxnLTAubXktMwogICAgICAgIC5iZzQucC00LmgtMTAwLmoxCiAgICAgICAgICBwIEVuIGVsIGVjb3Npc3RlbWEgbW9kZXJubyBkZSBnZXN0acOzbiBkZSBkYXRvcywgbm9zIGVuY29udHJhbW9zIHByaW5jaXBhbG1lbnRlIGNvbiBkb3MgZ3JhbmRlcyBmYW1pbGlhcyBkZSBiYXNlcyBkZSBkYXRvczogbGFzIHJlbGFjaW9uYWxlcyB5IGxhcyBubyByZWxhY2lvbmFsZXMgKE5vU1FMKS4gQ2FkYSB1bmEgdGllbmUgc3VzIHByb3BpYXMgZm9ydGFsZXphcyB5IGNhc29zIGRlIHVzbyBpZGVhbGVzLCB5IGNvbXByZW5kZXIgc3VzIGRpZmVyZW5jaWFzIGVzIGZ1bmRhbWVudGFsIHBhcmEgdG9tYXIgZGVjaXNpb25lcyBhY2VydGFkYXMgZW4gZWwgZGlzZcOxbyBkZSBzaXN0ZW1hcyBkZSBkYXRvcy4KCiAgICAgICAgICBwLm1iLTAgUGFyYSB2aXN1YWxpemFyIG1lam9yIGxhcyBkaWZlcmVuY2lhcyBmdW5kYW1lbnRhbGVzIGVudHJlIGVzdG9zIGRvcyB0aXBvcyBkZSBiYXNlcyBkZSBkYXRvcywgb2JzZXJ2ZW1vcyBsYSBzaWd1aWVudGUgcmVwcmVzZW50YWNpw7NuIGdyw6FmaWNhLiBDb21vIHNlIGlsdXN0cmEgZW4gbGEgaW5mb2dyYWbDrWEsIG1pZW50cmFzIGxhcyBiYXNlcyBkZSBkYXRvcyByZWxhY2lvbmFsZXMgc2UgY2FyYWN0ZXJpemFuIHBvciBzdSBlc3RydWN0dXJhIHLDrWdpZGEgeSBnYXJhbnTDrWFzIEFDSUQsIGxhcyBiYXNlcyBkZSBkYXRvcyBOb1NRTCBkZXN0YWNhbiBwb3Igc3UgZmxleGliaWxpZGFkIHkgZXNjYWxhYmlsaWRhZC4gRXN0YSBkaXN0aW5jacOzbiBlcyBtdXkgaW1wb3J0YW50ZSBhbCBtb21lbnRvIGRlIHNlbGVjY2lvbmFyIGVsIHRpcG8gZGUgYmFzZSBkZSBkYXRvcyBtw6FzIGFkZWN1YWRvIHBhcmEgbnVlc3RyYXMgbmVjZXNpZGFkZXMgZXNwZWPDrWZpY2FzLiBQb3IgZWplbXBsbywgc2kgbmVjZXNpdGFtb3MgbWFudGVuZXIgbGEgaW50ZWdyaWRhZCByZWZlcmVuY2lhbCBlbiB0cmFuc2FjY2lvbmVzIGZpbmFuY2llcmFzLCB1bmEgYmFzZSBkZSBkYXRvcyByZWxhY2lvbmFsIHNlcsOtYSBsYSBlbGVjY2nDs24gw7NwdGltYS4gRW4gY2FtYmlvLCBzaSBlc3RhbW9zIG1hbmVqYW5kbyBkYXRvcyBkZSByZWRlcyBzb2NpYWxlcyBjb24gZXN0cnVjdHVyYXMgdmFyaWFibGVzIHkgYWx0byB2b2x1bWVuIGRlIGVzY3JpdHVyYXMsIHVuYSBiYXNlIGRlIGRhdG9zIE5vU1FMIHBvZHLDrWEgc2VyIG3DoXMgYXByb3BpYWRhLiAgCgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUKICAgICAgLmNvbC1hdXRvCiAgICAgICAgLnRpdHVsby1zZXh0by5jb2xvci1hY2VudG8tY29udGVuaWRvCiAgICAgICAgICBoNSBGaWd1cmEgMS4KICAgICAgICAgIHNwYW4gVGlwb3MgZGUgYmFzZXMgZGUgZGF0b3MKICAgICAgICBpbWcuaW1nLWEuaW1nLXQubWItMihzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzYwLnN2ZycsIGFsdD0nJykgICAgICAgCiAgICAgICAgZmlnY2FwdGlvbiBGdWVudGUuIE9JVCwgMjAyNC4KCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIubWItNS5wYi0zCiAgICAgIC5jb2wtbGctNS5teS1sZy0wLm15LTMKICAgICAgICAucC0zLmgtMTAwLmoxIAogICAgICAgICAgcC5tYi0wIEFob3JhIGJpZW4sIGxhcyBiYXNlcyBkZSBkYXRvcyByZWxhY2lvbmFsZXMgaGFuIHNpZG8gZWwgcGlsYXIgZGUgbGEgZ2VzdGnDs24gZGUgZGF0b3MgZHVyYW50ZSBkw6ljYWRhcy4gU2UgYmFzYW4gZW4gZWwgbW9kZWxvIHJlbGFjaW9uYWwsIGRvbmRlIGxvcyBkYXRvcyBzZSBvcmdhbml6YW4gZW4gdGFibGFzIGNvbiBmaWxhcyB5IGNvbHVtbmFzIGNsYXJhbWVudGUgZGVmaW5pZGFzLiBMYSBmb3J0YWxlemEgZGUgZXN0ZSBtb2RlbG8gcmFkaWNhIGVuIHN1IGNhcGFjaWRhZCBwYXJhIG1hbnRlbmVyIGxhIGludGVncmlkYWQgZGUgbG9zIGRhdG9zIHkgZXN0YWJsZWNlciByZWxhY2lvbmVzIGNsYXJhcyBlbnRyZSBkaWZlcmVudGVzIGVudGlkYWRlcy4gQ3VhbmRvIG5lY2VzaXRhbW9zIGdhcmFudGl6YXIgbGEgY29uc2lzdGVuY2lhIGRlIGxhcyB0cmFuc2FjY2lvbmVzIHkgbWFudGVuZXIgcmVsYWNpb25lcyBjb21wbGVqYXMgZW50cmUgZGF0b3MsIGxhcyBiYXNlcyBkZSBkYXRvcyByZWxhY2lvbmFsZXMgc29uIGxhIG9wY2nDs24gbcOhcyBzZWd1cmEuICAgCiAgICAgIC5jb2wtbGctMy5teS1sZy0wLm15LTMuajEKICAgICAgICBpbWcuaW1nLWEuaW1nLXQoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy82MS5wbmcnLCBhbHQ9JycpICAgICAgCiAgICAgIC5jb2wtbGctNC5teS1sZy0wLm15LTMKICAgICAgICAuYmcxMy5icmFkLnAtMi5weC0zLmgtMTAwLmoxIAogICAgICAgICAgcC5tYi0wIFBvciBvdHJvIGxhZG8sIGxhcyBiYXNlcyBkZSBkYXRvcyBOb1NRTCBzdXJnaWVyb24gY29tbyByZXNwdWVzdGEgYSBsYXMgbmVjZXNpZGFkZXMgZGUgbGEgZXJhIGRlbCBiaWcgZGF0YSB5IGxhIHdlYiBtb2Rlcm5hLiBPZnJlY2VuIG1heW9yIGZsZXhpYmlsaWRhZCBlbiBjdWFudG8gYSBsYSBlc3RydWN0dXJhIGRlIGxvcyBkYXRvcyB5IG1lam9yIGVzY2FsYWJpbGlkYWQgaG9yaXpvbnRhbC4gTm8gcmVxdWllcmVuIHVuIGVzcXVlbWEgZmlqbywgbG8gcXVlIGxhcyBoYWNlIGlkZWFsZXMgcGFyYSBkYXRvcyBzZW1pLWVzdHJ1Y3R1cmFkb3MgbyBjdWFuZG8gbGEgZXN0cnVjdHVyYSBkZSBsb3MgZGF0b3MgcHVlZGUgY2FtYmlhciBjb24gZnJlY3VlbmNpYS4gICAgICAgIAoKICAgIFNlcGFyYWRvciAKICAgICN0XzNfMi50aXR1bG8tc2VndW5kby5jb2xvci1hY2VudG8tY29udGVuaWRvCiAgICAgIGgyIDMuMiBPcGVyYWNpb25lcyBDUlVEIHkgY29uc3VsdGFzIGLDoXNpY2FzCgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUKICAgICAgLmNvbC1sZy01Lm15LWxnLTAubXktMwogICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzYyLnBuZycsIGFsdD0nJykgICAgICAgCiAgICAgIC5jb2wtbGctNy5teS1sZy0wLm15LTMKICAgICAgICAuYmc0LnAtNC5oLTEwMC5qMQogICAgICAgICAgcCAjW2IgTGFzIG9wZXJhY2lvbmVzIENSVUQgKENyZWF0ZSwgUmVhZCwgVXBkYXRlLCBEZWxldGUpXSBzb24gZGUgYWx0YSByZWxldmFuY2lhIHBhcmEgaW50ZXJhY3R1YXIgY29uIGxvcyBkYXRvcyBhbG1hY2VuYWRvcyBlbiBjdWFscXVpZXIgc2lzdGVtYSBkZSBiYXNlIGRlIGRhdG9zLiBMYSBpbXBsZW1lbnRhY2nDs24gZGUgZXN0YXMgb3BlcmFjaW9uZXMgdmFyw61hIHNlZ8O6biBlbCB0aXBvIGRlIGJhc2UgZGUgZGF0b3MsIHBlcm8gbG9zIHByaW5jaXBpb3MgYsOhc2ljb3MgcGVybWFuZWNlbiBjb25zdGFudGVzLgoKICAgICAgICAgIHAgRW4gZWwgY29udGV4dG8gZGUgYmFzZXMgZGUgZGF0b3MgcmVsYWNpb25hbGVzLCBlc3RhcyBvcGVyYWNpb25lcyBzZSByZWFsaXphbiBtZWRpYW50ZSBTUUwgKFN0cnVjdHVyZWQgUXVlcnkgTGFuZ3VhZ2UpLiBMYXMgY29uc3VsdGFzIFNFTEVDVCBwZXJtaXRlbiByZWN1cGVyYXIgZGF0b3MgZXNwZWPDrWZpY29zLCBtaWVudHJhcyBxdWUgSU5TRVJULCBVUERBVEUgeSBERUxFVEUgc2UgdXRpbGl6YW4gcGFyYSBtb2RpZmljYXIgbG9zIHJlZ2lzdHJvcyBleGlzdGVudGVzLiBMYSBwb3RlbmNpYSBkZSBTUUwgcmFkaWNhIGVuIHN1IGNhcGFjaWRhZCBwYXJhIHJlYWxpemFyIGNvbnN1bHRhcyBjb21wbGVqYXMgcXVlIGNvbWJpbmFuIGRhdG9zIGRlIG3Dumx0aXBsZXMgdGFibGFzIHkgYXBsaWNhbiBjcml0ZXJpb3MgZGUgZmlsdHJhZG8geSBhZ3JlZ2FjacOzbi4KCiAgICAgICAgICBwIFBhcmEgbGFzIGJhc2VzIGRlIGRhdG9zIE5vU1FMLCBsYXMgb3BlcmFjaW9uZXMgQ1JVRCBzZSBpbXBsZW1lbnRhbiBkZSBtYW5lcmEgZGlmZXJlbnRlIHNlZ8O6biBlbCB0aXBvIGVzcGVjw61maWNvIGRlIGJhc2UgZGUgZGF0b3MuIFBvciBlamVtcGxvLCBlbiB1bmEgYmFzZSBkZSBkYXRvcyBkb2N1bWVudGFsIGNvbW8gTW9uZ29EQiwgc2UgdHJhYmFqYSBjb24gZG9jdW1lbnRvcyBKU09OIHF1ZSBwdWVkZW4gdGVuZXIgZXN0cnVjdHVyYSB2YXJpYWJsZSwgeSBsYXMgb3BlcmFjaW9uZXMgc2UgcmVhbGl6YW4gbWVkaWFudGUgbcOpdG9kb3MgZXNwZWPDrWZpY29zIGRlIGxhIEFQSSBkZSBsYSBiYXNlIGRlIGRhdG9zLiAKCiAgICBTZXBhcmFkb3IgCiAgICAjdF8zXzMudGl0dWxvLXNlZ3VuZG8uY29sb3ItYWNlbnRvLWNvbnRlbmlkbwogICAgICBoMiAzLjMgR2VzdGnDs24geSBvcHRpbWl6YWNpw7NuIGRlIGJhc2VzIGRlIGRhdG9zCgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUKICAgICAgLmNvbC1sZy03Lm15LWxnLTAubXktMwogICAgICAgIC5iZzE0LnAtNC5oLTEwMC5qMQogICAgICAgICAgcCBMYSBnZXN0acOzbiBlZmVjdGl2YSBkZSBiYXNlcyBkZSBkYXRvcyB2YSBtw6FzIGFsbMOhIGRlIHNpbXBsZW1lbnRlIGFsbWFjZW5hciB5IHJlY3VwZXJhciBpbmZvcm1hY2nDs24uIEltcGxpY2EgdW4gY29uanVudG8gZGUgcHLDoWN0aWNhcyB5IHTDqWNuaWNhcyBwYXJhIGFzZWd1cmFyIGVsIHJlbmRpbWllbnRvLCBsYSBkaXNwb25pYmlsaWRhZCB5IGxhIGludGVncmlkYWQgZGUgbG9zIGRhdG9zLiBMYSBvcHRpbWl6YWNpw7NuIGVzIHVuIHByb2Nlc28gY29udGludW8gcXVlIGRlYmUgYWRhcHRhcnNlIGEgbGFzIGNhbWJpYW50ZXMgbmVjZXNpZGFkZXMgZGVsIHNpc3RlbWEuCgogICAgICAgICAgcCBVbiBhc3BlY3RvIGVzZW5jaWFsIGRlIGxhIG9wdGltaXphY2nDs24gZXMgZWwgZGlzZcOxbyBlIGltcGxlbWVudGFjacOzbiBkZSDDrW5kaWNlcy4gTG9zIMOtbmRpY2VzIHNvbiBlc3RydWN0dXJhcyBkZSBkYXRvcyBhZGljaW9uYWxlcyBxdWUgbWVqb3JhbiBsYSB2ZWxvY2lkYWQgZGUgbGFzIG9wZXJhY2lvbmVzIGRlIGLDunNxdWVkYSwgcGVybyB0aWVuZW4gdW4gY29zdG8gZW4gdMOpcm1pbm9zIGRlIGVzcGFjaW8gZGUgYWxtYWNlbmFtaWVudG8geSByZW5kaW1pZW50byBkZSBlc2NyaXR1cmEuIExhIGRlY2lzacOzbiBkZSBxdcOpIGNhbXBvcyBpbmRleGFyIGRlYmUgYmFzYXJzZSBlbiB1biBhbsOhbGlzaXMgY3VpZGFkb3NvIGRlIGxvcyBwYXRyb25lcyBkZSBhY2Nlc28gYSBsb3MgZGF0b3MuICAgIAogICAgICAuY29sLWxnLTUubXktbGctMC5teS0zCiAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvNjMucG5nJywgYWx0PScnKSAgICAgICAKCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIubWItNQogICAgICAuY29sLWxnLTUubXktbGctMC5teS0zCiAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvNjQucG5nJywgYWx0PScnKSAgICAgICAKICAgICAgLmNvbC1sZy03Lm15LWxnLTAubXktMwogICAgICAgIHAgRWwgbW9uaXRvcmVvIGRlbCByZW5kaW1pZW50byBlcyB1bmEgcGFydGUgZnVuZGFtZW50YWwgZGUgbGEgZ2VzdGnDs24gZGUgYmFzZXMgZGUgZGF0b3MuIEVzIG5lY2VzYXJpbyBwcmVzdGFyIGF0ZW5jacOzbiBhIG3DqXRyaWNhcyBjb21vIGVsIHRpZW1wbyBkZSByZXNwdWVzdGEgZGUgbGFzIGNvbnN1bHRhcywgZWwgdXNvIGRlIHJlY3Vyc29zIGRlbCBzaXN0ZW1hIHkgbG9zIHBhdHJvbmVzIGRlIGFjY2VzbyBhIGxvcyBkYXRvcy4gTGFzIGhlcnJhbWllbnRhcyBkZSBtb25pdG9yZW8gaWRlbnRpZmljYW4gY3VlbGxvcyBkZSBib3RlbGxhIHkgb3BvcnR1bmlkYWRlcyBkZSBvcHRpbWl6YWNpw7NuLgoKICAgICAgICBwIExhIHNlZ3VyaWRhZCBlcyBvdHJvIGFzcGVjdG8gcXVlIG5vIHB1ZWRlIGRlc2N1aWRhcnNlLiBFc3RvIGluY2x1eWUgbGEgZ2VzdGnDs24gZGUgdXN1YXJpb3MgeSBwZXJtaXNvcywgbGEgZW5jcmlwdGFjacOzbiBkZSBkYXRvcyBzZW5zaWJsZXMgeSBsYSBpbXBsZW1lbnRhY2nDs24gZGUgcG9sw610aWNhcyBkZSByZXNwYWxkbyB5IHJlY3VwZXJhY2nDs24uIEVuIGVsIGNvbnRleHRvIGRlIGxhIGludGVsaWdlbmNpYSBhcnRpZmljaWFsLCBkb25kZSBmcmVjdWVudGVtZW50ZSBzZSB0cmFiYWphIGNvbiBkYXRvcyBzZW5zaWJsZXMgbyBwZXJzb25hbGVzLCBsYSBzZWd1cmlkYWQgYWRxdWllcmUgdW5hIGltcG9ydGFuY2lhIGHDum4gbWF5b3IuCgogICAgICAgIHAgTGEgZXNjYWxhYmlsaWRhZCBlcyB1biBmYWN0b3IgY2xhdmUgZW4gbGEgZ2VzdGnDs24gZGUgZ3JhbmRlcyB2b2zDum1lbmVzIGRlIGRhdG9zLiBMb3Mgc2lzdGVtYXMgZGUgYmFzZXMgZGUgZGF0b3MgZGViZW4gc2VyIGRpc2XDsWFkb3MgcGFyYSBhZGFwdGFyc2UgYWwgY3JlY2ltaWVudG8gZnV0dXJvLCB5YSBzZWEgYSB0cmF2w6lzIGRlIGVzY2FsYWJpbGlkYWQgdmVydGljYWwgKGFtcGxpYW5kbyBsb3MgcmVjdXJzb3MgZGUgdW4gw7puaWNvIHNlcnZpZG9yKSBvIGhvcml6b250YWwgKGRpc3RyaWJ1eWVuZG8gbGEgY2FyZ2EgZW50cmUgdmFyaW9zIHNlcnZpZG9yZXMpLiBMYXMgZXN0cmF0ZWdpYXMgZGUgcGFydGljaW9uYW1pZW50byB5IHJlcGxpY2FjacOzbiBzb24gZnVuZGFtZW50YWxlcyBwYXJhIG1hbmVqYXIgZ3JhbmRlcyBjYW50aWRhZGVzIGRlIGRhdG9zIGRlIGZvcm1hIGVmaWNpZW50ZS4gCgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTQKICAgICAgLmNvbC1sZy02Lm15LWxnLTAubXktMwogICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzY1LnBuZycsIGFsdD0nJykgICAgICAKICAgICAgLmNvbC1sZy02Lm15LTMKICAgICAgICBUaW1lTGluZVJFRC5jb2xvci1wcmltYXJpbyhkYXRhLWFvcz0iZmFkZS1yaWdodCIpCiAgICAgICAgICBwKG51bWVybz0iMSIgdGl0dWxvPSJJZGVudGlmaWNhciBsb3MgY2FtcG9zIG3DoXMgY29uc3VsdGFkb3MiKSBQYXJhIGNyZWFyIMOtbmRpY2VzIGVmZWN0aXZvcywgZXMgbmVjZXNhcmlvIGFuYWxpemFyIGxhcyBjb25zdWx0YXMgZnJlY3VlbnRlcyB5IGRldGVybWluYXIgcXXDqSBjYW1wb3Mgc29uIHV0aWxpemFkb3MgY29uIG1heW9yIHJlZ3VsYXJpZGFkIGVuIGxvcyBmaWx0cm9zIHkgbGFzIGNsw6F1c3VsYXMgSk9JTi4gRXN0byBwZXJtaXRlIGVuZm9jYXJzZSBlbiBsYXMgY29sdW1uYXMgcXVlIHJlYWxtZW50ZSBtZWpvcmFyw6FuIGVsIHJlbmRpbWllbnRvIGRlIGxhcyBjb25zdWx0YXMuCiAgICAgICAgICBwKG51bWVybz0iMiIgdGl0dWxvPSJFdmFsdWFyIGVsIGNvc3RvIGRlIGFjdHVhbGl6YWNpw7NuIikgQXVucXVlIGxvcyDDrW5kaWNlcyBhY2VsZXJhbiBsYXMgYsO6c3F1ZWRhcywgdGFtYmnDqW4gcHVlZGVuIHJhbGVudGl6YXIgbGFzIG9wZXJhY2lvbmVzIGRlIGluc2VyY2nDs24sIGFjdHVhbGl6YWNpw7NuIHkgZWxpbWluYWNpw7NuLiBFcyBpbXBvcnRhbnRlIGVxdWlsaWJyYXIgZWwgYmVuZWZpY2lvIGRlIGxhIHZlbG9jaWRhZCBkZSBsZWN0dXJhIGNvbiBlbCBjb3N0byBhZGljaW9uYWwgZW4gbGFzIG9wZXJhY2lvbmVzIGRlIGVzY3JpdHVyYSwgcHJpb3JpemFuZG8gw61uZGljZXMgZW4gY29sdW1uYXMgcXVlIHNlIGNvbnN1bHRhbiBtw6FzIHF1ZSBsYXMgcXVlIHNlIGFjdHVhbGl6YW4gY29uIGZyZWN1ZW5jaWEuCiAgICAgICAgICBwKG51bWVybz0iMyIgdGl0dWxvPSJTZWxlY2Npb25hciBlbCB0aXBvIGFkZWN1YWRvIGRlIMOtbmRpY2UiKSBEZXBlbmRpZW5kbyBkZSBsYXMgbmVjZXNpZGFkZXMgZGVsIHNpc3RlbWEsIHNlIGRlYmVuIGVsZWdpciBlbnRyZSBkaWZlcmVudGVzIHRpcG9zIGRlIMOtbmRpY2VzLCBjb21vIGxvcyDDrW5kaWNlcyBCLXRyZWUsIGhhc2gsIG8gw61uZGljZXMgY29tcHVlc3Rvcy4gTGEgZWxlY2Npw7NuIGRlYmUgYmFzYXJzZSBlbiBsYSBlc3RydWN0dXJhIGRlIGxvcyBkYXRvcyB5IGxhcyBvcGVyYWNpb25lcyBkZSBiw7pzcXVlZGEgcXVlIHNlIHJlYWxpemFyw6FuIGNvbiBtYXlvciBmcmVjdWVuY2lhLgogICAgICAgICAgcChudW1lcm89IjQiIHRpdHVsbz0iTW9uaXRvcmVhciBlbCB1c28gZGUgw61uZGljZXMiKSBFcyBmdW5kYW1lbnRhbCByZWFsaXphciB1biBzZWd1aW1pZW50byBkZWwgdXNvIGRlIGxvcyDDrW5kaWNlcyBlbiBsYXMgY29uc3VsdGFzLiBBbGd1bm9zIMOtbmRpY2VzIHB1ZWRlbiB2b2x2ZXJzZSBpbm5lY2VzYXJpb3MgY29uIGVsIHRpZW1wbywgZXNwZWNpYWxtZW50ZSBzaSBsYXMgY29uc3VsdGFzIG8gcGF0cm9uZXMgZGUgYWNjZXNvIGNhbWJpYW4uIE1vbml0b3JlYXIgc3UgcmVuZGltaWVudG8gcGVybWl0ZSBlbGltaW5hciDDrW5kaWNlcyByZWR1bmRhbnRlcyB5IG1hbnRlbmVyIGxhIGJhc2UgZGUgZGF0b3Mgb3B0aW1pemFkYS4KICAgICAgICAgIHAobnVtZXJvPSI1IiB0aXR1bG89IkNvbnNpZGVyYXIgbGEgZnJhZ21lbnRhY2nDs24gZGUgw61uZGljZXMiKSBBIG1lZGlkYSBxdWUgc2UgaW5zZXJ0YW4sIGFjdHVhbGl6YW4gbyBlbGltaW5hbiBkYXRvcywgbG9zIMOtbmRpY2VzIHB1ZWRlbiBmcmFnbWVudGFyc2UsIGxvIHF1ZSByZWR1Y2Ugc3UgZWZpY2llbmNpYS4gU2UgZGViZSByZWFsaXphciB1biBtYW50ZW5pbWllbnRvIHBlcmnDs2RpY28gcGFyYSByZW9yZ2FuaXphciBvIHJlY29uc3RydWlyIGxvcyDDrW5kaWNlcyB5IGFzZWd1cmFyc2UgZGUgcXVlIHNpZ2FuIGZ1bmNpb25hbmRvIGRlIG1hbmVyYSDDs3B0aW1hLgoKICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlcgogICAgICAuY29sLWxnLTEwCiAgICAgICAgLmJnMi5wLTQKICAgICAgICAgIHAubWItMCBFc3RhcyBwcsOhY3RpY2FzIHBlcm1pdGVuIGNyZWFyIMOtbmRpY2VzIGJpZW4gZGlzZcOxYWRvcyBxdWUgbm8gc29sbyBvcHRpbWl6YW4gbGFzIGNvbnN1bHRhcywgc2lubyBxdWUgdGFtYmnDqW4gZXF1aWxpYnJhbiBlbCB1c28gZGUgcmVjdXJzb3MgeSBlbCByZW5kaW1pZW50byBnZW5lcmFsIGRlIGxhIGJhc2UgZGUgZGF0b3MuCgo="},null]}